/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'vf5fs-pxd-w64-retail'
*/

// TODO: Turn icri into a proper class with virtual methods
#include <cstddef>

struct CriAtomExPlayerConfigTag;
struct CriManaFrameInfo;
struct CriManaTextureBuffersYUV;
struct CriManaPlaybackBasicWorkConfig;
struct CriManaPlaybackExWorkConfig;
struct CriAtomExStandardVoicePoolConfigTag;
struct CriAtomExWaveformInfoTag;
struct icriVtbl;

/* 5575 */
struct icri
{
  icriVtbl *vfptr;
};

/* 720 */
enum CriManaPlayerStatus
{
  CRIMANAPLAYER_STATUS_STOP = 0x0,
  CRIMANAPLAYER_STATUS_DECHDR = 0x1,
  CRIMANAPLAYER_STATUS_WAIT_PREP = 0x2,
  CRIMANAPLAYER_STATUS_PREP = 0x3,
  CRIMANAPLAYER_STATUS_READY = 0x4,
  CRIMANAPLAYER_STATUS_PLAYING = 0x5,
  CRIMANAPLAYER_STATUS_PLAYEND = 0x6,
  CRIMANAPLAYER_STATUS_ERROR = 0x7,
  CRIMANAPLAYER_STATUS_ENUM_SIZE_IS_4BYTES = 0x7FFFFFFF,
};

/* 5590 */
union $06BEEFCA05CAD6AD7CC614388AB1690D
{
	void* pad;
  //void (__fastcall *~icri)(icri *pThis);
  //void *(__fastcall *__vecDelDtor)(icri *pThis, unsigned int);
};

/* 723 */
enum CriAtomExResumeModeTag
{
  CRIATOMEX_RESUME_ALL_PLAYBACK = 0x0,
  CRIATOMEX_RESUME_PAUSED_PLAYBACK = 0x1,
  CRIATOMEX_RESUME_PREPARED_PLAYBACK = 0x2,
  CRIATOMEX_RESUME_MODE_RESERVED = 0x3,
  CRIATOMEX_RESUME_MODE_ENUM_SIZE_IS_4BYTES = 0x7FFFFFFF,
};

/* 5591 */
struct icriVtbl
{
  struct CriAtomExPlayerTag *(__fastcall *criAtomExPlayer_Create)(icri *pThis, CriAtomExPlayerConfigTag *, void *, int);
  std::byte gap8[72];
  int (__fastcall *criAtomExPlayer_CalculateWorkSize)(icri *pThis, CriAtomExPlayerConfigTag *);
  unsigned int (__fastcall *criAtomExPlayer_Start)(icri *pThis, struct CriAtomExPlayerTag *);
  void (__fastcall *criAtomExPlayer_Stop)(icri *pThis, struct CriAtomExPlayerTag *);
  void (__fastcall *criAtomExPlayer_StopWithoutReleaseTime)(icri *pThis, struct CriAtomExPlayerTag *);
  void (__fastcall *criAtomExPlayer_ResetParameters)(icri *pThis, struct CriAtomExPlayerTag *);
  void (__fastcall *criAtomExPlayer_UpdateAll)(icri *pThis, struct CriAtomExPlayerTag *);
  void (__fastcall *criAtomExPlayer_SetPitch)(icri *pThis, struct CriAtomExPlayerTag *, float);
  void (__fastcall *criAtomExPlayer_SetPan3dAngle)(icri *pThis, struct CriAtomExPlayerTag *, float);
  void (__fastcall *criAtomExPlayer_Pause)(icri *pThis, struct CriAtomExPlayerTag *, int);
  void (__fastcall *criAtomExPlayer_SetAisacControlByName)(icri *pThis, struct CriAtomExPlayerTag *, const char *, float);
  int (__fastcall *criAtomExPlayer_IsPaused)(icri *pThis, struct CriAtomExPlayerTag *);
  void (__fastcall *criAtom_ExecuteMain)(icri *pThis);
  void (__fastcall *criAtomExPlayer_SetData)(icri *pThis, struct CriAtomExPlayerTag *, void *, int);
  void (__fastcall *criAtomExPlayer_SetFormat)(icri *pThis, struct CriAtomExPlayerTag *, unsigned int);
  void (__fastcall *criAtomExPlayer_SetNumChannels)(icri *pThis, struct CriAtomExPlayerTag *, int);
  void (__fastcall *criAtomExPlayer_SetSamplingRate)(icri *pThis, struct CriAtomExPlayerTag *, int);
  void (__fastcall *criAtomExPlayer_SetFile)(icri *pThis, struct CriAtomExPlayerTag *, struct CriFsBinderHnObjTag *, const char *);
  void (__fastcall *criAtomExPlayer_LimitLoopCount)(icri *pThis, struct CriAtomExPlayerTag *, int);
  void (__fastcall *criAtomExPlayer_SetVoicePriority)(icri *pThis, struct CriAtomExPlayerTag *, int);
  int (__fastcall *criManaPlayer_CalculateHandleWorkSize)(icri *pThis);
  struct CriManaPlayerTag *(__fastcall *criManaPlayer_Create)(icri *pThis, void *, int);
  void (__fastcall *criManaPlayer_Destroy)(icri *pThis, struct CriManaPlayerTag *);
  void (__fastcall *criManaPlayer_SetFile)(icri *pThis, struct CriManaPlayerTag *, struct CriFsBinderHnObjTag *, const char *);
  void (__fastcall *criManaPlayer_Start)(icri *pThis, struct CriManaPlayerTag *);
  void (__fastcall *criManaPlayer_Stop)(icri *pThis, struct CriManaPlayerTag *);
  void (__fastcall *criManaPlayer_StopAndWaitCompletion)(icri *pThis, struct CriManaPlayerTag *);
  void (__fastcall *criManaPlayer_Pause)(icri *pThis, struct CriManaPlayerTag *, int);
  int (__fastcall *criManaPlayer_IsPaused)(icri *pThis, struct CriManaPlayerTag *);
  void (__fastcall *criManaPlayer_GetTime)(icri *pThis, struct CriManaPlayerTag *, unsigned __int64 *, unsigned __int64 *);
  CriManaPlayerStatus (__fastcall *criManaPlayer_GetStatus)(icri *pThis, struct CriManaPlayerTag *);
  int (__fastcall *criManaPlayer_ReferFrame)(icri *pThis, struct CriManaPlayerTag *, CriManaFrameInfo *);
  int (__fastcall *criManaPlayer_IsFrameOnTime)(icri *pThis, struct CriManaPlayerTag *, CriManaFrameInfo *);
  void (__fastcall *criManaPlayer_CopyFrameToBuffersYUV)(icri *pThis, struct CriManaPlayerTag *, CriManaFrameInfo *, CriManaTextureBuffersYUV *);
  void (__fastcall *criManaPlayer_DiscardFrame)(icri *pThis, struct CriManaPlayerTag *, CriManaFrameInfo *);
  float (__fastcall *criManaPlayer_GetVolume)(icri *pThis, struct CriManaPlayerTag *);
  void (__fastcall *criManaPlayer_SetVolume)(icri *pThis, struct CriManaPlayerTag *, float);
  int (__fastcall *criManaPlayer_GetPlaybackWorkParam)(icri *pThis, struct CriManaPlayerTag *, CriManaPlaybackBasicWorkConfig *, CriManaPlaybackExWorkConfig *);
  int (__fastcall *criManaPlayer_CalculatePlaybackWorkSize)(icri *pThis, struct CriManaPlayerTag *, CriManaPlaybackBasicWorkConfig *, CriManaPlaybackExWorkConfig *);
  void (__fastcall *criManaPlayer_SetPlaybackWork)(icri *pThis, struct CriManaPlayerTag *, CriManaPlaybackBasicWorkConfig *, CriManaPlaybackExWorkConfig *, void *, int);
  void (__fastcall *criManaPlayer_FreePlaybackWork)(icri *pThis, struct CriManaPlayerTag *);
  void (__fastcall *criManaPlayer_Prepare)(icri *pThis, struct CriManaPlayerTag *);
  void (__fastcall *criManaPlayer_DecodeHeader)(icri *pThis, struct CriManaPlayerTag *);
  void (__fastcall *criMana_SyncMasterTimer)(icri *pThis);
  void (__fastcall *criMana_ExecuteMain)(icri *pThis);
  $06BEEFCA05CAD6AD7CC614388AB1690D ___u45;
  void *(__fastcall *alloc)(icri *pThis, unsigned __int64, unsigned __int64);
  void (__fastcall *free)(icri *pThis, void *);
  int (__fastcall *criAtomEx_CalculateWorkSizeForRegisterAcfData)(icri *pThis, void *, int);
  void (__fastcall *criAtomEx_RegisterAcfData)(icri *pThis, void *, int, void *, int);
  void (__fastcall *criAtomEx_UnregisterAcf)(icri *pThis);
  int (__fastcall *criAtomEx_CalculateWorkSizeForDspBusSetting)(icri *pThis, const char *);
  int (__fastcall *criAtomEx_CalculateWorkSizeForDspBusSettingFromAcfData)(icri *pThis, void *, int, const char *);
  void (__fastcall *criAtomEx_AttachDspBusSetting)(icri *pThis, const char *, void *, int);
  struct CriAtomExVoicePoolTag *(__fastcall *criAtomExVoicePool_AllocateStandardVoicePool)(icri *pThis, CriAtomExStandardVoicePoolConfigTag *, void *, int);
  void (__fastcall *criAtomExVoicePool_Free)(icri *pThis, struct CriAtomExVoicePoolTag *);
  void (__fastcall *criAtomDbas_Destroy)(icri *pThis, int);
  void (__fastcall *criAtomEx_DetachDspBusSetting)(icri *pThis);
  void (__fastcall *criAtomEx_ExecuteMain)(icri *pThis);
  void (__fastcall *criAtomExPlayer_SetBusSendLevelByName)(icri *pThis, struct CriAtomExPlayerTag *, const char *, float);
  void (__fastcall *criAtomExPlayer_SetBusSendLevelOffsetByName)(icri *pThis, struct CriAtomExPlayerTag *, const char *, float);
  unsigned int (__fastcall *criAtomExPlayer_Prepare)(icri *pThis, struct CriAtomExPlayerTag *);
  void (__fastcall *criAtomExPlayer_SetAisacControlById)(icri *pThis, struct CriAtomExPlayerTag *, unsigned int, float);
  void (__fastcall *criAtomExPlayer_Resume)(icri *pThis, struct CriAtomExPlayerTag *, CriAtomExResumeModeTag);
  void (__fastcall *criAtomExPlayer_Update)(icri *pThis, struct CriAtomExPlayerTag *, unsigned int);
  void (__fastcall *unmount)(icri *pThis, unsigned int);
  void (__fastcall *remount)(icri *pThis, unsigned int);
  void (__fastcall *criAtomExPlayer_SetVoicePoolIdentifier)(icri *pThis, struct CriAtomExPlayerTag *, unsigned int);
  void (__fastcall *criAtomExPlayer_SetDspParameter)(icri *pThis, struct CriAtomExPlayerTag *, int, float);
  int (__fastcall *criAtomExAcb_GetWaveformInfoByName)(icri *pThis, struct CriAtomExAcbTag *, const char *, CriAtomExWaveformInfoTag *);
};

/* 724 */
enum CriAtomExVoiceAllocationMethodTag
{
  CRIATOMEX_ALLOCATE_VOICE_ONCE = 0x0,
  CRIATOMEX_RETRY_VOICE_ALLOCATION = 0x1,
  CRIATOMEX_VOICE_ALLOCATION_METHOD_IS_4BYTE = 0x7FFFFFFF,
};

/* 5574 */
const struct CriAtomExPlayerConfigTag
{
  CriAtomExVoiceAllocationMethodTag voice_allocation_method;
  int max_path_strings;
  int max_path;
  char max_aisacs;
  int updates_time;
  int enable_audio_synced_timer;
};

/* 5576 */
struct CriManaImageBufferInfo
{
  char *imageptr;
  unsigned int bufsize;
  unsigned int line_pitch;
  unsigned int line_size;
  unsigned int num_lines;
};

/* 728 */
enum CriManaAlphaType
{
  CRIMANA_COMPO_OPAQ = 0x0,
  CRIMANA_COMPO_ALPHFULL = 0x1,
  CRIMANA_COMPO_ALPH3STEP = 0x2,
  CRIMANA_COMPO_ALPH32BIT = 0x3,
  CRIMANA_COMPO_ALPH1BIT = 0x4,
  CRIMANA_COMPO_ALPH2BIT = 0x5,
  CRIMANA_COMPO_ALPH3BIT = 0x6,
  CRIMANA_COMPO_ALPH4BIT = 0x7,
  CRIMANA_COMPO_ENUM_SIZE_IS_4BYTES = 0x7FFFFFFF,
};

/* 729 */
enum CriManaReferFrameResult
{
  CRIMANA_REFER_RESULT_OK = 0x0,
  CRIMANA_REFER_RESULT_SHORT_INPUT = 0x1,
  CRIMANA_REFER_RESULT_SHORT_CPUTIME = 0x2,
  CRIMANA_REFER_RESULT_NO_MORE_KEEP = 0x3,
  CRIMANA_REFER_RESULT_ENUM_SIZE_IS_4BYTES = 0x7FFFFFFF,
};

/* 730 */
enum CriManaColorSpaceConversionType
{
  CRIMANA_COLORSPACE_CONVERSION_TYPE_ITU_R_BT601_LIMITED = 0x0,
  CRIMANA_COLORSPACE_CONVERSION_TYPE_ITU_R_BT601_FULLRANGE = 0x1,
  CRIMANA_COLORSPACE_CONVERSION_TYPE_ENUM_SIZE_IS_4BYTES = 0x7FFFFFFF,
};

/* 5577 */
struct __declspec(align(8)) CriManaFrameInfo
{
  int frame_no;
  int frame_no_per_file;
  unsigned int width;
  unsigned int height;
  unsigned int disp_width;
  unsigned int disp_height;
  unsigned int framerate;
  unsigned int framerate_n;
  unsigned int framerate_d;
  unsigned int total_frames_per_file;
  unsigned __int64 time;
  unsigned __int64 time_per_file;
  unsigned __int64 tunit;
  unsigned int cnt_concatenated_movie;
  int num_images;
  CriManaImageBufferInfo image_info[4];
  int csc_flag;
  CriManaAlphaType alpha_type;
  CriManaReferFrameResult ref_result;
  void *details_ptr[2];
  CriManaColorSpaceConversionType color_conv;
  unsigned int cnt_skipped_frames;
  unsigned int reserved[1];
};

/* 5578 */
struct CriManaTextureBuffer
{
  char *imagebuf;
  unsigned int bufsize;
  unsigned int pitch;
};

/* 5579 */
struct CriManaTextureBuffersYUV
{
  CriManaTextureBuffer y_plane;
  CriManaTextureBuffer u_plane;
  CriManaTextureBuffer v_plane;
  CriManaTextureBuffer a_plane;
};

/* 5580 */
struct CriManaPlaybackCommonParams
{
  int readbuf_size_byte;
  unsigned int max_audio_tracks;
};

/* 726 */
enum CriManaVideoCodecType
{
  CRIMANA_VIDEO_CODEC_UNKNOWN = 0x0,
  CRIMANA_VIDEO_CODEC_SOFDEC_PRIME = 0x1,
  CRIMANA_VIDEO_CODEC_H264 = 0x5,
  CRIMANA_VIDEO_CODEC_VP9 = 0x9,
  CRIMANA_VIDEO_CODEC_ENUM_SIZE_IS_4BYTES = 0x7FFFFFFF,
};

/* 5581 */
struct CriManaPlaybackVideoParams
{
  int video_flag;
  int max_width;
  int max_height;
  int num_frame_pools;
  CriManaVideoCodecType codec_type;
  int capacity_of_picsize;
  int framerate_n;
  int framerate_d;
};

/* 727 */
enum CriManaAudioCodecType
{
  CRIMANA_AUDIO_CODEC_UNKNOWN = 0x0,
  CRIMANA_AUDIO_CODEC_ADX = 0x2,
  CRIMANA_AUDIO_CODEC_HCA = 0x4,
  CRIMANA_AUDIO_CODEC_ENUM_SIZE_IS_4BYTES = 0x7FFFFFFF,
};

/* 5582 */
struct CriManaPlaybackAudioParams
{
  int audio_flag;
  unsigned int sampling_rate;
  unsigned int num_channels;
  int output_buffer_samples;
  CriManaAudioCodecType codec_type;
};

/* 5583 */
struct CriManaPlaybackSubtitleParams
{
  int subtitle_flag;
  int max_datasize;
};

/* 5584 */
struct CriManaPlaybackBasicWorkConfig
{
  CriManaPlaybackCommonParams common_params;
  CriManaPlaybackVideoParams video_params;
  CriManaPlaybackAudioParams main_audio_params;
  CriManaPlaybackSubtitleParams subtitle_params;
};

/* 5585 */
struct CriManaPlaybackAlphaParams
{
  int alpha_flag;
  CriManaAlphaType alpha_type;
  int max_width;
  int max_height;
  CriManaVideoCodecType codec_type;
  int capacity_of_picsize;
};

/* 5586 */
struct CriManaPlaybackExWorkConfig
{
  CriManaPlaybackAudioParams sub_audio_params;
  CriManaPlaybackAudioParams extra_audio_params;
  CriManaPlaybackAlphaParams alpha_params;
};

/* 718 */
enum CriAtomSoundRendererTypeTag
{
  CRIATOM_SOUND_RENDERER_NATIVE = 0x1,
  CRIATOM_SOUND_RENDERER_ASR = 0x2,
  CRIATOM_SOUND_RENDERER_HAPTIC = 0x3,
  CRIATOM_SOUND_RENDERER_HW1 = 0x1,
  CRIATOM_SOUND_RENDERER_HW2 = 0x5,
  CRIATOM_SOUND_RENDERER_HW3 = 0x9,
  CRIATOM_SOUND_RENDERER_HW4 = 0xD,
  CRIATOM_SOUND_RENDERER_ANY = 0x0,
  CRIATOM_SOUND_RENDERER_ENUM_SIZE_IS_4BYTES = 0x7FFFFFFF,
};

/* 5587 */
struct CriAtomStandardPlayerConfigTag
{
  int max_channels;
  int max_sampling_rate;
  int streaming_flag;
  CriAtomSoundRendererTypeTag sound_renderer_type;
  int decode_latency;
};

/* 5588 */
const struct CriAtomExStandardVoicePoolConfigTag
{
  unsigned int identifier;
  int num_voices;
  CriAtomStandardPlayerConfigTag player_config;
};

/* 5589 */
struct CriAtomExWaveformInfoTag
{
  int wave_id;
  unsigned int format;
  int sampling_rate;
  int num_channels;
  __int64 num_samples;
  int streaming_flag;
  unsigned int reserved[1];
};

